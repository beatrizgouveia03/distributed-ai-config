server:
  port:8082

spring:
  application:
    name: microservice-ai

  cloud:
    loadbalancer:
      ribbon:
        enabled: true

ai:
  model:
    chat: openai
  openai:
    api-key: ${GOOGLE_API_KEY}
    base-url: https://generative-language.googleapis.com/v1beta/openai
    chat:
      completions-path: /chat/completions
      options:
        model: gemini-2.0-flash
  mcp:
    client:
      toolcallback:
        enabled: true
      sse:
        connections:
          server:
            url: http://localhost:8081/

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
      show-components: always
  metrics:
    tags:
      application: ${spring.application.name}

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      microservice-ai:
        slidingWindowSize: 2
        failureRateThreshold: 50
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        waitDurationInOpenState: 10000
        event-consumer-buffer-size: 10