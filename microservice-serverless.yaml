server:
  port: 8083

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
      show-components: always
  metrics:
    tags:
      application: ${spring.application.name}

resilience4j:
  retry:
    instances:
      retrymicroservice-serverless:
        maxAttempts: 5
        waitDuration: 10000
        intervalFunction:
          type: exponencial
          exponential-backoff-multiplier: 2
          max-interval: 2000ms
        retry-exceptions:
          - java.util.concurrent.TimeoutException
          - java.net.ConnectException
  bulkhead:
    instances:
      bulkheadmicroservice-serverless:
        maxWaitDuration: 2ms
        maxConcurrentCalls: 20
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      microservice-serverless:
        slidingWindowSize: 2
        failureRateThreshold: 50
        registerHealthIndicator: true
        ringBufferSizeInCloseState: 5
        slidingWindowType: COUNT_BASED
        waitDurationInOpenState: 10000
        event-consumer-buffer-size: 10
        ringBufferSizeInHalfOpenState: 5
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.lang.IllegalStateException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException